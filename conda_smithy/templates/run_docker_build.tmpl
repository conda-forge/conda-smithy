#!/usr/bin/env bash

# PLEASE NOTE: This script has been automatically generated by conda-smithy. Any changes here
# will be lost next time ``conda smithy rerender`` is run. If you would like to make permanent
# changes to this script, consider a proposal to conda-smithy so that other feedstocks can also
# benefit from the improvement.

FEEDSTOCK_ROOT=$(cd "$(dirname "$0")/.."; pwd;)
RECIPE_ROOT=$FEEDSTOCK_ROOT/{{ recipe_dir }}

docker info

config=$(cat <<CONDARC

channels:
{%- for channel in channels.get('sources', []) %}
 - {{ channel }}
{%- endfor %}

conda-build:
 root-dir: /feedstock_root/build_artefacts

show_channel_urls: true

CONDARC
)

# In order for the conda-build process in the container to write to the mounted
# volumes, we need to run with the same id as the host machine, which is
# normally the owner of the mounted volumes, or at least has write permission
HOST_USER_ID=$(id -u)
# Check if docker-machine is being used (normally on OSX) and get the uid from
# the VM
if hash docker-machine 2> /dev/null && docker-machine active > /dev/null; then
    HOST_USER_ID=$(docker-machine ssh $(docker-machine active) id -u)
fi

rm -f "$FEEDSTOCK_ROOT/build_artefacts/conda-forge-build-done"

cat << EOF | {{ docker.executable }} run -i \
                        -v "${RECIPE_ROOT}":/recipe_root \
                        -v "${FEEDSTOCK_ROOT}":/feedstock_root \
                        -e HOST_USER_ID="${HOST_USER_ID}" \
                        -a stdin -a stdout -a stderr \
                        {{ docker.image }} \
                        {{ docker.command }} || exit 1

set -e
set +x
export BINSTAR_TOKEN=${BINSTAR_TOKEN}
set -x
export PYTHONUNBUFFERED=1

echo "$config" > ~/.condarc
# A lock sometimes occurs with incomplete builds. The lock file is stored in build_artefacts.
conda clean --lock

conda install --yes --quiet conda-forge-build-setup
{% if build_setup -%}
{{ build_setup }}{% endif -%}

{%- block build %}
{%- if 'ccache-toolchain' in ' '.join(package['meta']['requirements']['build']) %}
# ccache uses the compiler command line to generate the cache keys, so we can't have a
# different path for every build. ccache provides CCACHE_BASEDIR variable to solve this
# but it's better to avoid setting it as it has some side effects.
conda build --no-build-id /recipe_root --quiet || exit 1
{%- else %}
conda build /recipe_root --quiet || exit 1
{%- endif %}
{%- for owner, channel in channels['targets'] %}
{{ upload_script }} /recipe_root {{ owner }} --channel={{ channel }} || exit 1
{%- endfor -%}
{%- endblock -%}

touch /feedstock_root/build_artefacts/conda-forge-build-done
EOF

# double-check that the build got to the end
# see https://github.com/conda-forge/conda-smithy/pull/337
# for a possible fix
set -x
test -f "$FEEDSTOCK_ROOT/build_artefacts/conda-forge-build-done" || exit 1

